(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{203:function(e,t,a){"use strict";a.d(t,"a",(function(){return y})),a.d(t,"b",(function(){return f})),a.d(t,"e",(function(){return j})),a.d(t,"c",(function(){return R})),a.d(t,"d",(function(){return _})),a.d(t,"f",(function(){return D})),a.d(t,"g",(function(){return C}));var n=a(14),l=a.n(n),r=a(0),o=a.n(r),c=a(176),i=a(489),s=a(490),u=a(491),m=a(495),d=a(200),p=a(192),h=Object(p.a)((function(e){return{contentBoxStyle:{paddingTop:e.spacing(1),paddingBottom:e.spacing(1)}}})),g=function(e){var t=e.children,a=h().contentBoxStyle;return o.a.createElement(d.a,{className:a},t)},f=function(e){var t=e.children;return o.a.createElement(g,null,o.a.createElement(c.a,null,o.a.createElement(i.a,{dense:!0},t)))},y=function(e){var t=e.children,a=Object(r.useState)(!1),n=l()(a,2),c=n[0],i=n[1];return o.a.createElement(s.a,null,o.a.createElement(u.a,{onClick:function(){i((function(e){return!e}))}},o.a.createElement(m.a,{checked:c,disableRipple:!0})),t)},E=a(497),b=a(492),w=a(222),k=a.n(w),v=a(223),x=a.n(v),j=function(e){var t=e.data,a=[];return o.a.createElement(g,null,o.a.createElement(c.a,null,o.a.createElement(b.a,{defaultCollapseIcon:o.a.createElement(k.a,null),defaultExpanded:a,defaultExpandIcon:o.a.createElement(x.a,null)},function e(t){var n=t.id,l=t.name,r=t.children,c=n||l;return a.push(c),o.a.createElement(E.a,{key:c,nodeId:c,label:l},Array.isArray(r)?r.map((function(t){return e(t)})):null)}(t))))},R=function(e){var t=e.language,a=e.children;return o.a.createElement("code",{className:t},a)},S=a(181),I=a(496),T=a(493),B=a(494),A=Object(p.a)((function(e){return{codeBlockBoxStyle:{border:"solid",borderWidth:1,borderColor:e.palette.text.primary,borderRadius:e.shape.borderRadius}}})),_=function(e){var t=e.language,a=e.children,n="dark"===Object(S.a)().palette.type,l=A().codeBlockBoxStyle;return o.a.createElement(g,null,o.a.createElement(d.a,{className:l},o.a.createElement(I.a,{language:t,style:n?T.a:B.a},a)))},F=a(195),P=Object(p.a)((function(e){return{viewBoxStyle:{padding:e.spacing(1)},headingBoxStyle:{paddingTop:e.spacing(1),paddingBottom:e.spacing(1)},contentBoxStyle:{paddingTop:e.spacing(1),paddingBottom:e.spacing(1)}}})),D=function(e){var t=e.heading,a=e.children,n=P(),l=n.viewBoxStyle,r=n.headingBoxStyle,c=n.contentBoxStyle;return o.a.createElement(o.a.Fragment,null,o.a.createElement(d.a,{className:l},o.a.createElement(d.a,{className:r},o.a.createElement(F.a,{variant:"h5"},t)),o.a.createElement(d.a,{className:c},a)))},C=(a(205),function(e){var t=e.children;return o.a.createElement(g,null,o.a.createElement(F.a,null,t))})},205:function(e,t,a){"use strict";var n=a(0),l=a.n(n),r=a(242);t.a=function(e){var t=e.href,a=e.children;return l.a.createElement(r.a,{href:t},a)}},99:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(203),o=a(205),c={previousPost:l.a.createElement(o.a,{href:"/blog/post/20210117-build_a_ghpage_blog/"},"previous post"),ghPages:l.a.createElement(o.a,{href:"https://www.npmjs.com/package/gh-pages"},"gh-pages"),createReactApp:l.a.createElement(o.a,{href:"https://reactjs.org/docs/create-a-new-react-app.html"},"create-react-app"),reactStatic:l.a.createElement(o.a,{href:"https://github.com/react-static/react-static"},"react-static"),webpack:l.a.createElement(o.a,{href:"https://webpack.js.org/"},"webpack"),webpackCrashCourse:l.a.createElement(o.a,{href:"https://www.youtube.com/watch?v=lFjinlwpcHY"},"webpack crash course"),reachRouter:l.a.createElement(o.a,{href:"https://reach.tech/router/"},"reach-router"),reactStaticPluginFilesystem:l.a.createElement(o.a,{href:"https://github.com/react-static/react-static/tree/master/packages/react-static-plugin-source-filesystem"},"react-static-plugin-source-filesystem"),reactStaticDocument:l.a.createElement(o.a,{href:"https://github.com/react-static/react-static/blob/master/docs/config.md#document"},"Document")},i=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(r.g,null,"In my ",c.previousPost," I talked about how to build a github pages blog using ",l.a.createElement(r.c,null,c.createReactApp),". This is a great tool when your first starting out, but you may find as your site grows in size, the load times may start to degrade. This is because the entire site is bundled together and recieved by the browser in one transaction! In this post I will show you how to fix this by building your blog with"," ",l.a.createElement(r.c,null,c.reactStatic),"."),l.a.createElement(r.g,null,"As we dive into ",l.a.createElement(r.c,null,c.reactStatic),", it will help to have a basic understanding of ",l.a.createElement(r.c,null,c.webpack),", and"," ",l.a.createElement(r.c,null,c.reachRouter),". I highly recommend this"," ",c.webpackCrashCourse," as an intro to webpack."))},s="yarn global add react-static\nreact-static create",u="yarn add gh-pages",m='"scripts": {\n  "build": "react-static build && touch dist/.nojekyll", # modified\n  "deploy": "gh-pages -t true -b master -d dist", # added\n},',d="export default {\n  maxThreads: 1, // Remove this when you start doing any static generation\n}",p='const posts = require("./src/blog_posts.json");\n\nconst linkedPosts = posts.map((post) => ({\n  ...post,\n  link: `/blog/post/${post.id}`,\n}));\n\nexport default {\n  getRoutes: async () => {\n    return [\n      {\n        path: "/",\n        template: "src/pages/blog",\n        getData: () => ({\n          posts: linkedPosts,\n        }),\n      },\n      ...linkedPosts.map((post) => ({\n        path: post.link,\n        template: "src/pages" + post.link,\n        getData: () => ({ post }),\n      })),\n    ];\n  },\n};',h='[\n  {\n    "id": "20210117-build_a_ghpage_blog",\n    "title": "Build a github page blog with create react app"\n  },\n  {\n    "id": "20210124-make_ghpage_blog_static",\n    "title": "Build a github page blog with react-static"\n  }\n]',g='import React from "react";\nimport { Root, Routes } from "react-static";\nimport { Router } from "@reach/router";\nimport { ThemeProvider } from "@material-ui/core";\nimport theme from "./components/theme";\nimport { Header, Body, Footer, Divider } from "./components/page";\n\nconst App = () => {\n  return (\n    <Root>\n      <ThemeProvider theme={theme}>\n        <Header />\n        <Divider />\n        <Body>\n          <React.Suspense fallback={<em>Loading...</em>}>\n            <Router>\n              <Routes path="*" />\n            </Router>\n          </React.Suspense>\n        </Body>\n        <Divider />\n        <Footer />\n      </ThemeProvider>\n    </Root>\n  );\n};\n\nexport default App;',f='const App = () => {\n  return (\n    <Root>\n      <React.Suspense fallback={<em>Loading...</em>}>\n        <Router>\n          <Routes path="*" />\n        </Router>\n      </React.Suspense>\n    </Root>\n  );\n};\n\nexport default App;',y=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(r.g,null,"Ok, so just like with ",l.a.createElement(r.c,null,c.createReactApp),", we are going to use ",l.a.createElement(r.c,null,c.reactStatic)," to build some starter boilerplate:"),l.a.createElement(r.d,{language:"bash"},s),l.a.createElement(r.g,null,"After giving a name, you should be presented with a list of boilerplate options. We are going to start from the ",l.a.createElement(r.c,null,"blank")," template. That said, I recommend you try out the ",l.a.createElement(r.c,null,"basic")," template before moving on. Start up the app with ",l.a.createElement(r.c,null,"yarn start"),", and poke around the code. See if you can get an idea for how it is put together."),l.a.createElement(r.g,null,"To deploy this app, we are going to use ",l.a.createElement(r.c,null,c.ghPages),":"),l.a.createElement(r.d,{language:"jsx"},u),l.a.createElement(r.g,null," ","Now, modify your ",l.a.createElement(r.c,null,"package.json")," scripts:"),l.a.createElement(r.d,{language:"jsx"},m),l.a.createElement(r.g,null,"We modify the build script definitition so that every time the directory is rebuilt, a ",l.a.createElement(r.c,null,".nojekyll")," file is created. This tells GitHub to avoid their Jekyll deployment pipeline and just present the existing static files as they are. Without this, static files with leading underscores will not be served. This causes a problem as"," ",l.a.createElement(r.c,null,c.reactStatic)," generates a lot of files that start with underscores. You'll might want to update your"," ",l.a.createElement(r.c,null,".gitignore")," to handle this."))},E=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(r.g,null,"Once you have the ",l.a.createElement(r.c,null,"blank")," template ready, go ahead and take a look at ",l.a.createElement(r.c,null,"static.config.js"),". You should have something like this to start:"),l.a.createElement(r.d,{language:"jsx"},d),l.a.createElement(r.g,null,"We are going to remove everything and start with this:"),l.a.createElement(r.d,{language:"jsx"},p),l.a.createElement(r.g,null,"In my previous post, I used a ",l.a.createElement(r.c,null,"listing.json")," to store a mapping of every blog post. This takes a very similar approach, using"," ",l.a.createElement(r.c,null,"src/blog_posts.json"),". Your listing should look something like this:"),l.a.createElement(r.d,{language:"json"},h),l.a.createElement(r.g,null,"This should look familiar, i.e. it is from my blog! So what's going on here? At the top of ",l.a.createElement(r.c,null,"static.config.js")," we created"," ",l.a.createElement(r.c,null,"linkedPosts")," which basically adds a ",l.a.createElement(r.c,null,"link")," ","attribute to each json object. I've chosen to use"," ",l.a.createElement(r.c,null,"/blog/post/${post.id}")," as my post slug, and I mirror this structure under ",l.a.createElement(r.c,null,"src/"),". Like in my previous post, I've chosen to have every post be a folder containing an"," ",l.a.createElement(r.c,null,"index.jsx"),". This allows me to break up my posts into separate modules to be easier to edit. For example, at the time of writing this, I have this folder structure:"),l.a.createElement(r.e,{data:{name:"src",children:[{name:"blog",children:[{name:"post",children:[{name:"20210117-build_a_ghpage_blog",children:[{name:"implementation.jsx"},{name:"index.jsx"},{name:"links.jsx"},{name:"overview.jsx"}]},{name:"20210124-make_ghpage_blog_static",children:[{name:"implementation.jsx"},{name:"index.jsx"},{name:"links.jsx"},{name:"overview.jsx"},{name:"setup.jsx"},{name:"snippets.jsx"}]}]}]}]}}),l.a.createElement(r.g,null,"There is one caveat to this structure and it's related to the"," ",l.a.createElement(r.c,null,"template")," key in the ",l.a.createElement(r.c,null,"static.config.js"),". But we will come back to that. First, let's talk about ",l.a.createElement(r.c,null,"getRoutes")," ","and ",l.a.createElement(r.c,null,"getData"),"."),l.a.createElement(r.g,null,l.a.createElement(r.c,null,"getRoutes")," is a critical component that defines our static routes. This is how ",l.a.createElement(r.c,null,c.reactStatic)," decideds what"," ",l.a.createElement(r.c,null,"index.html")," files to build. Remember that in a static site like github pages, each request to ",l.a.createElement(r.c,null,"/some/path")," needs to have a corresponding ",l.a.createElement(r.c,null,"index.html")," file. With"," ",l.a.createElement(r.c,null,c.createReactApp),", you only get the root because of how ",l.a.createElement(r.c,null,c.webpack)," is configured. So"," ",l.a.createElement(r.c,null,c.reactStatic)," kind of acts like a transparent tool for configuring ",l.a.createElement(r.c,null,c.webpack),"! There is obviously more to it that that, but if you've never touched ",l.a.createElement(r.c,null,c.webpack)," ","before, this takes you one step closer. Neat!"),l.a.createElement(r.g,null,l.a.createElement(r.c,null,"getData")," isn't actually necessary in general. This sets up a hook to provide data to the components defined by the template key. This allows you to define generic templates so that you can render multiple pages with the same template, but different data. In your template components, you would use the provided hook ",l.a.createElement(r.c,null,"useRouteData()")," ","to access whats returned by these functions."),l.a.createElement(r.g,null,"If you looked at the ",l.a.createElement(r.c,null,"basic")," boilerplate template, you may have noticed that every blog post was actually rendered by a single template file. This works great if you can come up with a well known format for the data that will drive every blog post. In my case, I wanted every post to be free from limitation, so I opted for a unique template for every post."),l.a.createElement(r.g,null,"Ok, so above I mentioned a caveat. Here goes. If you poked around at some other examples online, you may have found a plugin that you can add to ",l.a.createElement(r.c,null,"static.config.js")," called"," ",l.a.createElement(r.c,null,c.reactStaticPluginFilesystem),". Basically this creates a recursive mapping for a directory, generating a ",l.a.createElement(r.c,null,"path")," and"," ",l.a.createElement(r.c,null,"template")," for each file found, and adds them to"," ",l.a.createElement(r.c,null,"getRoutes"),". This is actually awesome and a great quick starter. However (the caveat), there is no way to filter out certain files. Since I broke out my posts into separate smaller components in separate files, each one would be compiled. This caused build errors for files that did not default export a react component. That said, if you are looking for a simple blog structure, perhaps you will find this useful!"))},b=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(r.g,null,"At this point, all we need to do now is take a look at"," ",l.a.createElement(r.c,null,"App.js"),". Just like with ",l.a.createElement(r.c,null,c.createReactApp),", it will be filled with some starter code that you can wipe out. If you read my previous post, I talked about using a common page that was built with components like"," ",l.a.createElement(r.c,null,"src/app/components/common/page/{header,body,footer}"),". What's really cool about ",l.a.createElement(r.c,null,c.reactStatic)," is that"," ",l.a.createElement(r.c,null,"App.js")," will actually be the same entry point for every template! This means this component can be your generic structure if you want! For example, this is my implementation:"),l.a.createElement(r.d,{language:"jsx"},g),l.a.createElement(r.g,null,"If you look deeper into the library, you will find there are specific tools for creating common structure like"," ",l.a.createElement(r.c,null,c.reactStaticDocument),". For now, if you ignore all of the personalization stuff, you're really left with this:"),l.a.createElement(r.d,{language:"jsx"},f),l.a.createElement(r.g,null,"If you haven't seen ",l.a.createElement(r.c,null,"React.Suspense"),", all it does is render the ",l.a.createElement(r.c,null,"fallback")," until the data provided by the curret route is made available. Whats really import here is the routing. If you've used tools like ",l.a.createElement(r.c,null,c.reactRouter)," or"," ",l.a.createElement(r.c,null,c.reachRouter),', you might have an idea of how this works. Simply put, a router routes requests to different components. This is often done in a dynamic environment where you can do things like "client side routing". Since we are in a static environment generated by'," ",l.a.createElement(r.c,null,c.reactStatic),", we can use it's ",l.a.createElement(r.c,null,"Routes")," ","component. With it, every request will be mapped to the components defined by our ",l.a.createElement(r.c,null,"template")," keys in"," ",l.a.createElement(r.c,null,"static.config.js"),"!"),l.a.createElement(r.g,null,"And with that, you should be good to go! Be sure to check out my"," ",l.a.createElement(r.c,null,"dev")," branch if you get stuck, or want to check out how I do my components."),l.a.createElement(r.g,null,"Cheers!"))};t.default=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(r.f,{key:"Overview",heading:"Overview"},l.a.createElement(i,null)),l.a.createElement(r.f,{key:"Setup",heading:"Setup"},l.a.createElement(y,null)),l.a.createElement(r.f,{key:"Configuration",heading:"Configuration"},l.a.createElement(E,null)),l.a.createElement(r.f,{key:"Implementation",heading:"Implementation"},l.a.createElement(b,null)))}}}]);